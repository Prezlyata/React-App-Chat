{"version":3,"sources":["Events.js","components/LoginForm.js","components/chats/SideBar.js","components/chats/ChatHeading.js","components/messages/Messages.js","components/messages/MessageInput.js","components/chats/ChatContainer.js","components/Layout.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECIEVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setUser","_ref","user","isUser","setError","handleSubmit","e","preventDefault","socket","nickname","state","emit","handleChange","setState","target","value","error","_this2","_this$state","react_default","a","createElement","className","onSubmit","htmlFor","ref","input","textInput","type","id","onChange","placeholder","Component","SideBar","_this$props","chats","activeChat","setActiveChat","logout","keyboard_arrow_down_default","list_ul_default","onClick","refs","map","chat","name","lastMessage","messages","length","users","find","classNames","key","concat","message","title","eject_default","ChatHeading","numberOfUsers","Messages","scrollDown","bind","assertThisInitialized","container","scrollTop","scrollHeight","prevProps","prevState","typingUsers","mes","sender","time","MessageInput","sendMessage","sendTyping","lastUpdateTime","Date","now","isTyping","startCheckingTyping","console","log","typingInterval","setInterval","stopCheckingTyping","clearInterval","autoComplete","onKeyUp","keyCode","disabled","ChatContainer","resetChat","addChat","reset","newChats","toConsumableArray","messageEvent","typingEvent","on","updateTypingInChat","addMessageToChat","chatId","push","includes","filter","u","SideBar_SideBar","Messages_Messages","MessageInput_MessageInput","socketUrl","Layout","initSocket","io","reconnect","ChatContainer_ChatContainer","LoginForm_LoginForm","App","Layout_Layout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.48ecae86.chunk.js","sourcesContent":["module.exports = {\r\n\tCOMMUNITY_CHAT:\"COMMUNITY_CHAT\",\r\n\tUSER_CONNECTED:\"USER_CONNECTED\",\r\n\tMESSAGE_RECIEVED:\"MESSAGE_RECIEVED\",\r\n\tMESSAGE_SENT:\"MESSAGE_SENT\",\r\n\tUSER_DISCONNECTED:\"USER_DISCONNECTED\",\r\n\tTYPING:\"TYPING\",\r\n\tVERIFY_USER:\"VERIFY_USER\",\r\n\tLOGOUT:\"LOGOUT\"\r\n}","import React, { Component } from 'react';\r\nimport { VERIFY_USER } from '../Events';\r\n\r\nexport default class LoginForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tnickname: '',\r\n\t\t\terror: ''\r\n\t\t};\r\n\t}\r\n\r\n\tsetUser = ({ user, isUser }) => {\r\n\t\tif (isUser) {\r\n\t\t\tthis.setError('User name taken');\r\n\t\t} else {\r\n\t\t\tthis.setError('');\r\n\t\t\tthis.props.setUser(user);\r\n\t\t}\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst { socket } = this.props;\r\n\t\tconst { nickname } = this.state;\r\n\t\tsocket.emit(VERIFY_USER, nickname, this.setUser);\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({ nickname: e.target.value });\r\n\t};\r\n\r\n\tsetError = (error) => {\r\n\t\tthis.setState({ error });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { nickname, error } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"login\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"login-form\">\r\n\t\t\t\t\t<label htmlFor=\"nickname\">\r\n\t\t\t\t\t\t<h2>Got a name?</h2>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={(input) => {\r\n\t\t\t\t\t\t\tthis.textInput = input;\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"nickname\"\r\n\t\t\t\t\t\tvalue={nickname}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder={'Your name'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"error\">{error ? error : null}</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport FAChevronDown from 'react-icons/lib/md/keyboard-arrow-down';\r\nimport FAMenu from 'react-icons/lib/fa/list-ul';\r\nimport FASearch from 'react-icons/lib/fa/search';\r\nimport MdEject from 'react-icons/lib/md/eject';\r\n\r\nexport default class SideBar extends Component {\r\n\trender() {\r\n\t\tconst { chats, activeChat, user, setActiveChat, logout } = this.props;\r\n\t\treturn (\r\n\t\t\t<div id=\"side-bar\">\r\n\t\t\t\t<div className=\"heading\">\r\n\t\t\t\t\t<div className=\"app-name\">\r\n\t\t\t\t\t\tApp <FAChevronDown />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"menu\">\r\n\t\t\t\t\t\t<FAMenu />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"users\"\r\n\t\t\t\t\tref=\"users\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\te.target === this.refs.user && setActiveChat(null);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{chats.map((chat) => {\r\n\t\t\t\t\t\tif (chat.name) {\r\n\t\t\t\t\t\t\tconst lastMessage = chat.messages[chat.messages.length - 1];\r\n\t\t\t\t\t\t\tconst user = chat.users.find(({ name }) => {\r\n\t\t\t\t\t\t\t\treturn name !== this.props.name;\r\n\t\t\t\t\t\t\t}) || { name: 'People' };\r\n\t\t\t\t\t\t\tconst classNames = activeChat && activeChat.id === chat.id ? 'active' : '';\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={chat.id}\r\n\t\t\t\t\t\t\t\t\tclassName={`user ${classNames}`}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetActiveChat(chat);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{/* <div className=\"user-photo\">{user.name[0].toUpperCase()}</div> */}\r\n\t\t\t\t\t\t\t\t\t<div className=\"user-info\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"name\">{user.name}</div>\r\n\t\t\t\t\t\t\t\t\t\t{lastMessage && <div className=\"last-message\">{lastMessage.message}</div>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"current-user\">\r\n\t\t\t\t\t<span>{user.name}</span>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tlogout();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttitle=\"Logout\"\r\n\t\t\t\t\t\tclassName=\"logout\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MdEject />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport FAVideo from 'react-icons/lib/fa/video-camera';\r\nimport FAUserPlus from 'react-icons/lib/fa/user-plus';\r\nimport MdEllipsisMenu from 'react-icons/lib/md/keyboard-control';\r\n\r\nexport default function({ name, numberOfUsers }) {\r\n\treturn (\r\n\t\t<div className=\"chat-header\">\r\n\t\t\t<div className=\"user-info\">\r\n\t\t\t\t<div className=\"user-name\">{name}</div>\r\n\t\t\t\t<div className=\"status\">\r\n\t\t\t\t\t<div className=\"indicator\" />\r\n\t\t\t\t\t<span>{numberOfUsers ? numberOfUsers : null}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Messages extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.scrollDown = this.scrollDown.bind(this);\r\n\t}\r\n\r\n\tscrollDown() {\r\n\t\tconst { container } = this.refs;\r\n\t\tcontainer.scrollTop = container.scrollHeight;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scrollDown();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tthis.scrollDown();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { messages, user, typingUsers } = this.props;\r\n\t\treturn (\r\n\t\t\t<div ref=\"container\" className=\"thread-container\">\r\n\t\t\t\t<div className=\"thread\">\r\n\t\t\t\t\t{messages.map((mes) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={mes.id} className={`message-container ${mes.sender === user.name && 'right'}`}>\r\n\t\t\t\t\t\t\t\t<div className=\"time\">{mes.time}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"data\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"message\">{mes.message}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"name\">{mes.sender}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{typingUsers.map((name) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={name} className=\"typing-user\">\r\n\t\t\t\t\t\t\t\t{`${name} is typing . . .`}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class MessageInput extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmessage: '',\r\n\t\t\tisTyping: false\r\n\t\t};\r\n\t}\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.sendMessage();\r\n\t\tthis.setState({ message: '' });\r\n\t};\r\n\r\n\tsendMessage = () => {\r\n\t\tthis.props.sendMessage(this.state.message);\r\n\t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.stopCheckingTyping();\r\n\t}\r\n\r\n\tsendTyping = () => {\r\n\t\tthis.lastUpdateTime = Date.now();\r\n\t\tif (!this.state.isTyping) {\r\n\t\t\tthis.setState({ isTyping: true });\r\n\t\t\tthis.props.sendTyping(true);\r\n\t\t\tthis.startCheckingTyping();\r\n\t\t}\r\n\t};\r\n\r\n\t/*\r\n\t*\tstartCheckingTyping\r\n\t*\tStart an interval that checks if the user is typing.\r\n\t*/\r\n\tstartCheckingTyping = () => {\r\n\t\tconsole.log('Typing');\r\n\t\tthis.typingInterval = setInterval(() => {\r\n\t\t\tif (Date.now() - this.lastUpdateTime > 300) {\r\n\t\t\t\tthis.setState({ isTyping: false });\r\n\t\t\t\tthis.stopCheckingTyping();\r\n\t\t\t}\r\n\t\t}, 300);\r\n\t};\r\n\r\n\t/*\r\n\t*\tstopCheckingTyping\r\n\t*\tStart the interval from checking if the user is typing.\r\n\t*/\r\n\tstopCheckingTyping = () => {\r\n\t\tconsole.log('Stop Typing');\r\n\t\tif (this.typingInterval) {\r\n\t\t\tclearInterval(this.typingInterval);\r\n\t\t\tthis.props.sendTyping(false);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { message } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"message-input\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"message-form\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"message\"\r\n\t\t\t\t\t\tref={'messageinput'}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\tautoComplete={'off'}\r\n\t\t\t\t\t\tplaceholder=\"Type text\"\r\n\t\t\t\t\t\tonKeyUp={(e) => {\r\n\t\t\t\t\t\t\te.keyCode !== 13 && this.sendTyping();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonChange={({ target }) => {\r\n\t\t\t\t\t\t\tthis.setState({ message: target.value });\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button disabled={message.length < 1} type=\"submit\" className=\"send\">\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\tSend{' '}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport SideBar from './SideBar'\r\nimport { COMMUNITY_CHAT, MESSAGE_SENT, MESSAGE_RECIEVED, TYPING } from '../../Events'\r\nimport ChatHeading from './ChatHeading'\r\nimport Messages from '../messages/Messages'\r\nimport MessageInput from '../messages/MessageInput'\r\n\r\n\r\nexport default class ChatContainer extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\t\r\n\t\r\n\t  this.state = {\r\n\t  \tchats:[],\r\n\t  \tactiveChat:null\r\n\t  };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t}\r\n\r\n\t/*\r\n\t*\tReset the chat back to only the chat passed in.\r\n\t* \t@param chat {Chat}\r\n\t*/\r\n\tresetChat = (chat)=>{\r\n\t\treturn this.addChat(chat, true)\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds chat to the chat container, if reset is true removes all chats\r\n\t*\tand sets that chat to the main chat.\r\n\t*\tSets the message and typing socket events for the chat.\r\n\t*\t\r\n\t*\t@param chat {Chat} the chat to be added.\r\n\t*\t@param reset {boolean} if true will set the chat as the only chat.\r\n\t*/\r\n\taddChat = (chat, reset)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tconst { chats } = this.state\r\n\r\n\t\tconst newChats = reset ? [chat] : [...chats, chat]\r\n\t\tthis.setState({chats:newChats, activeChat:reset ? chat : this.state.activeChat})\r\n\r\n\t\tconst messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`\r\n\t\tconst typingEvent = `${TYPING}-${chat.id}`\r\n\r\n\t\tsocket.on(typingEvent, this.updateTypingInChat(chat.id))\r\n\t\tsocket.on(messageEvent, this.addMessageToChat(chat.id))\r\n\t}\r\n\r\n\t/*\r\n\t* \tReturns a function that will \r\n\t*\tadds message to chat with the chatId passed in. \r\n\t*\r\n\t* \t@param chatId {number}\r\n\t*/\r\n\taddMessageToChat = (chatId)=>{\r\n\t\treturn message => {\r\n\t\t\tconst { chats } = this.state\r\n\t\t\tlet newChats = chats.map((chat)=>{\r\n\t\t\t\tif(chat.id === chatId)\r\n\t\t\t\t\tchat.messages.push(message)\r\n\t\t\t\treturn chat\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({chats:newChats})\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tUpdates the typing of chat with id passed in.\r\n\t*\t@param chatId {number}\r\n\t*/\r\n\tupdateTypingInChat = (chatId) =>{\r\n\t\treturn ({isTyping, user})=>{\r\n\t\t\tif(user !== this.props.user.name){\r\n\r\n\t\t\t\tconst { chats } = this.state\r\n\r\n\t\t\t\tlet newChats = chats.map((chat)=>{\r\n\t\t\t\t\tif(chat.id === chatId){\r\n\t\t\t\t\t\tif(isTyping && !chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\tchat.typingUsers.push(user)\r\n\t\t\t\t\t\t}else if(!isTyping && chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\tchat.typingUsers = chat.typingUsers.filter(u => u !== user)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn chat\r\n\t\t\t\t})\r\n\t\t\t\tthis.setState({chats:newChats})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds a message to the specified chat\r\n\t*\t@param chatId {number}  The id of the chat to be added to.\r\n\t*\t@param message {string} The message to be added to the chat.\r\n\t*/\r\n\tsendMessage = (chatId, message)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(MESSAGE_SENT, {chatId, message} )\r\n\t}\r\n\r\n\t/*\r\n\t*\tSends typing status to server.\r\n\t*\tchatId {number} the id of the chat being typed in.\r\n\t*\ttyping {boolean} If the user is typing still or not.\r\n\t*/\r\n\tsendTyping = (chatId, isTyping)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(TYPING, {chatId, isTyping})\r\n\t}\r\n\r\n\tsetActiveChat = (activeChat)=>{\r\n\t\tthis.setState({activeChat})\r\n\t}\r\n\trender() {\r\n\t\tconst { user, logout } = this.props\r\n\t\tconst { chats, activeChat } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<SideBar\r\n\t\t\t\t\tlogout={logout}\r\n\t\t\t\t\tchats={chats}\r\n\t\t\t\t\tuser={user}\r\n\t\t\t\t\tactiveChat={activeChat}\r\n\t\t\t\t\tsetActiveChat={this.setActiveChat}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<div className=\"chat-room-container\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tactiveChat !== null ? (\r\n\r\n\t\t\t\t\t\t\t<div className=\"chat-room\">\r\n\t\t\t\t\t\t\t\t<ChatHeading name={activeChat.name} />\r\n\t\t\t\t\t\t\t\t<Messages \r\n\t\t\t\t\t\t\t\t\tmessages={activeChat.messages}\r\n\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\ttypingUsers={activeChat.typingUsers}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<MessageInput \r\n\t\t\t\t\t\t\t\t\tsendMessage={\r\n\t\t\t\t\t\t\t\t\t\t(message)=>{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.sendMessage(activeChat.id, message)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tsendTyping={\r\n\t\t\t\t\t\t\t\t\t\t(isTyping)=>{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.sendTyping(activeChat.id, isTyping)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t):\r\n\t\t\t\t\t\t<div className=\"chat-room choose\">\r\n\t\t\t\t\t\t\t<h3>Choose a chat!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { USER_CONNECTED, LOGOUT, VERIFY_USER } from '../Events';\r\nimport LoginForm from './LoginForm';\r\nimport ChatContainer from './chats/ChatContainer';\r\n\r\nconst socketUrl = '/';\r\n// const socketUrl = 'http://localhost:3231';\r\nexport default class Layout extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tsocket: null,\r\n\t\t\tuser: null\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.initSocket();\r\n\t}\r\n\r\n\t/*\r\n\t*\tConnect to and initializes the socket.\r\n\t*/\r\n\tinitSocket = () => {\r\n\t\tconst socket = io(socketUrl);\r\n\r\n\t\tsocket.on('connect', () => {\r\n\t\t\tif (this.state.user) {\r\n\t\t\t\tthis.reconnect(socket);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Connected');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.setState({ socket });\r\n\t};\r\n\r\n\treconnect = (socket) => {\r\n\t\tsocket.emit(VERIFY_USER, this.state.user.name, ({ isUser, user }) => {\r\n\t\t\tif (isUser) {\r\n\t\t\t\tthis.setState({ user: null });\r\n\t\t\t} else {\r\n\t\t\t\tthis.setUser(user);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t/*\r\n\t* \tSets the user property in state \r\n\t*\t@param user {id:number, name:string}\r\n\t*/\r\n\r\n\tsetUser = (user) => {\r\n\t\tconst { socket } = this.state;\r\n\t\tsocket.emit(USER_CONNECTED, user);\r\n\t\tthis.setState({ user });\r\n\t};\r\n\r\n\t/*\r\n\t*\tSets the user property in state to null.\r\n\t*/\r\n\tlogout = () => {\r\n\t\tconst { socket } = this.state;\r\n\t\tsocket.emit(LOGOUT);\r\n\t\tthis.setState({ user: null });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { title } = this.props;\r\n\t\tconst { socket, user } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{!user ? (\r\n\t\t\t\t\t<LoginForm socket={socket} setUser={this.setUser} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ChatContainer socket={socket} user={user} logout={this.logout} />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Layout from './components/Layout'\r\nimport './index.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Layout />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}